server {
    listen 80;
    server_name {temp}.{REVERSE_DOMAIN};
    location / {
        add_header 'Content-Security-Policy' 'upgrade-insecure-requests';
        add_header 'Host' {domain};
        add_header 'X-Real-IP' $remote_addr;
        add_header 'X-Forwarded-For' $proxy_add_x_forwarded_for;
        add_header 'X-Forwarded-Proto' $scheme;

        proxy_set_header Host {domain};
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # BypassDNS headers to handle the requests
        proxy_set_header BypassDNS-IP-Proxy {IP};
        proxy_set_header BypassDNS-Domain-Proxy {domain};
        proxy_set_header BypassDNS-Expiration-Proxy "{EXPIRE_AT}";
        proxy_set_header BypassDNS-Protocol "{PROTOCOL}";
        proxy_set_header BypassDNS-Port {PORT};
        proxy_set_header BypassDNS-Temp-Domain {temp}.{REVERSE_DOMAIN};
        proxy_set_header BypassDNS-Disable-HtmlInjection {HTMLINJECTION};
        # End of headers

        sub_filter_types *;
        sub_filter_once off;

        sub_filter www.{domain} {temp}.{REVERSE_DOMAIN};
        sub_filter {domain} {temp}.{REVERSE_DOMAIN};
        sub_filter 'domain-bypassdns' '{domain}';
        # End of subfilter
        proxy_pass http://backend:5000;
        proxy_buffering off;
    }
}


